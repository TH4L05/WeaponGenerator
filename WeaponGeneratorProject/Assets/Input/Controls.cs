//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Movement"",
            ""id"": ""e52c72d7-fa51-47ba-bfa1-45213bfb058f"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""264d4c61-1dd2-44be-afce-4ba98c529588"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1012fe6f-02c1-4ba4-866f-1791abb48fc2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""ddb1f48c-5d26-49de-967c-226f20d140ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""79125718-6525-40bf-a68e-ceaadc24a614"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""b1c8d091-273f-49cc-b8a5-8f9dea5bd9b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryFire"",
                    ""type"": ""Button"",
                    ""id"": ""f01db809-e6e3-4415-bca5-3535b4deb315"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryFire"",
                    ""type"": ""Button"",
                    ""id"": ""33bd0523-baad-42a1-9ed7-b110f155cd14"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""ef573446-9ccb-4ba9-9642-c55f8ce20524"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""0858a593-983b-4dc4-ab01-627d52a23152"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponSwitchKeyBoard"",
                    ""type"": ""Button"",
                    ""id"": ""0f632a00-cf8b-4e07-a672-88feae741aaa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""40972bc4-0de9-45a3-8a4d-7e385c494306"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""03fd7fb8-66f7-4e09-989d-4fb11bc66b9d"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4f66acf2-7ce4-47af-99a8-16731a2e5717"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""27d1feba-1b19-4d9e-a9a9-21755c89dff0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8324b078-0986-437c-b901-9bb14b701ce9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d8d5629d-9a06-43aa-9fc3-f6d6be7489a9"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""PrimaryFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32343197-4f36-432c-b855-9533f3809862"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9ea2b5e3-17b4-484a-b86c-fc122f0f9d4d"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d042d520-ec79-4aec-bb7f-c26e3ecb551c"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed1a6b2e-15ac-465a-9473-05e557f4e173"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77f858cb-1627-4de2-9d07-ce093c28d8ca"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0a62840d-1dbd-4e14-89d8-2dbf6f467262"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""WeaponSwitchKeyBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1158491-83d2-486e-aa48-72e612a70e72"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""WeaponSwitchKeyBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70252c59-120c-4206-bdb7-0865a29bb54b"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""WeaponSwitchKeyBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac7b9af2-0c0b-4a58-869b-48d2b60eaa23"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""WeaponSwitchKeyBoard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7a7c3e7c-8196-4f80-940a-3656d80a8334"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": ""Normalize(min=-1,max=1)"",
                    ""groups"": """",
                    ""action"": ""MouseWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac478a96-410f-4525-bc1b-f072d4f0ee3f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""67c2cdf6-b6e6-454f-a78d-975ffa1fa184"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""381428db-86a9-4076-b79b-c2b4c028d2a5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""399dc604-34a0-468d-8042-255f7487f2fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""b6023bd7-1c8d-456b-a261-f7510f505e0d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6e8ca434-8065-472f-bbb0-0dfbb4a5f6d7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""57965f3a-bd45-4139-b4c5-26c30b44f3d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""Button"",
                    ""id"": ""8f8402ab-4a14-4b64-a3fb-42e4540e2373"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a80aa0e9-5ace-4f30-b199-0be7819eaf62"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""79b1729c-5cf1-4577-a99d-6ba9a1e78dfa"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ca2d4a5-2902-43e6-b052-b49059f3d592"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d380b58-245f-403b-b4e0-c85e82b155f9"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4e769b6-7048-4cf5-9293-889e43cb945d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0fc29ec8-c268-4d75-85d9-c20c5d141860"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05ba6ab4-0d3c-42da-92ce-afa746f1a696"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD Keys"",
                    ""id"": ""d51aaf63-4e81-49b7-9a65-ce02eb8623fd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c51c2373-452d-43f8-a59f-f88313fee700"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""f8854b5b-bf50-400e-a68c-de3c8bfaa6a4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""75f032ce-a314-47a6-810d-1bda91c12da3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""0c958156-3f98-411c-9d62-4b7b231e2d75"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow Keys"",
                    ""id"": ""993334e4-1967-4de2-995a-0d3e1534e660"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""91261575-2544-40e0-ad9d-4d60a9215556"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""24dc5a69-34ab-4aaf-8463-ff52bf871e71"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""22abc088-96db-4f78-9c6d-986fa7b1767b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""47d1643a-cf8e-4aaa-ba71-5b54191d6687"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Other"",
            ""id"": ""4e31ddea-4734-4904-a187-9ad76f4ee91b"",
            ""actions"": [
                {
                    ""name"": ""Generator"",
                    ""type"": ""Button"",
                    ""id"": ""aa8dc7e8-6535-4adb-9215-8e83bd5d7946"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""a298f5de-7704-42a6-a69b-bb908e255d15"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CreateHookNode"",
                    ""type"": ""Button"",
                    ""id"": ""10e33390-c4bd-4eb4-8660-4925e22c7ce9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AddForceToHookedObjects"",
                    ""type"": ""Button"",
                    ""id"": ""218699ef-94e1-4490-8b05-0ea1833451c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetHookNodes"",
                    ""type"": ""Button"",
                    ""id"": ""4ca96c39-9c78-4ff2-987f-95cfc6f129be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateCube"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9c393dc5-f994-4d66-8ed7-c9af96d8ef65"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleIngameMenu"",
                    ""type"": ""Button"",
                    ""id"": ""7a79d7c7-fa00-4f2e-b2c3-50ba645437ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a3d08c38-1e51-4fe5-a471-88a9761b704e"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Generator"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22b74bb8-270b-4cdb-9623-f9e19fa30387"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5c33162-ce55-4294-8507-80d6ab04981f"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""CreateHookNode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e18151db-c567-4659-a7e7-eff8aa7019ef"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""AddForceToHookedObjects"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d1f411f-17f3-4d39-b599-e65ee1f8ff8a"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Player"",
                    ""action"": ""ResetHookNodes"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9805f3c3-2b9b-4314-b034-9a63cefa5a49"",
                    ""path"": ""2DVector"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCube"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""da09d969-6522-4e3c-b47c-b0b4bc15a066"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCube"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""bd8294c9-8e61-41a7-9674-ba1dcda58d64"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCube"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""66b9c38a-54ed-4b05-b83d-03f2540a8a32"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCube"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""29b7c92a-00d2-4970-a966-3c7ac5baa1c0"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RotateCube"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""069bc166-f309-4866-88f0-043e7228d552"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleIngameMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Player"",
            ""bindingGroup"": ""Player"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Movement
        m_Movement = asset.FindActionMap("Movement", throwIfNotFound: true);
        m_Movement_Movement = m_Movement.FindAction("Movement", throwIfNotFound: true);
        m_Movement_Mouse = m_Movement.FindAction("Mouse", throwIfNotFound: true);
        m_Movement_Jump = m_Movement.FindAction("Jump", throwIfNotFound: true);
        m_Movement_Sprint = m_Movement.FindAction("Sprint", throwIfNotFound: true);
        m_Movement_Crouch = m_Movement.FindAction("Crouch", throwIfNotFound: true);
        m_Movement_PrimaryFire = m_Movement.FindAction("PrimaryFire", throwIfNotFound: true);
        m_Movement_SecondaryFire = m_Movement.FindAction("SecondaryFire", throwIfNotFound: true);
        m_Movement_Reload = m_Movement.FindAction("Reload", throwIfNotFound: true);
        m_Movement_MouseWheel = m_Movement.FindAction("MouseWheel", throwIfNotFound: true);
        m_Movement_WeaponSwitchKeyBoard = m_Movement.FindAction("WeaponSwitchKeyBoard", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Move = m_UI.FindAction("Move", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
        m_UI_Mouse = m_UI.FindAction("Mouse", throwIfNotFound: true);
        m_UI_LeftClick = m_UI.FindAction("LeftClick", throwIfNotFound: true);
        m_UI_RightClick = m_UI.FindAction("RightClick", throwIfNotFound: true);
        m_UI_MouseWheel = m_UI.FindAction("MouseWheel", throwIfNotFound: true);
        // Other
        m_Other = asset.FindActionMap("Other", throwIfNotFound: true);
        m_Other_Generator = m_Other.FindAction("Generator", throwIfNotFound: true);
        m_Other_Interact = m_Other.FindAction("Interact", throwIfNotFound: true);
        m_Other_CreateHookNode = m_Other.FindAction("CreateHookNode", throwIfNotFound: true);
        m_Other_AddForceToHookedObjects = m_Other.FindAction("AddForceToHookedObjects", throwIfNotFound: true);
        m_Other_ResetHookNodes = m_Other.FindAction("ResetHookNodes", throwIfNotFound: true);
        m_Other_RotateCube = m_Other.FindAction("RotateCube", throwIfNotFound: true);
        m_Other_ToggleIngameMenu = m_Other.FindAction("ToggleIngameMenu", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Movement
    private readonly InputActionMap m_Movement;
    private IMovementActions m_MovementActionsCallbackInterface;
    private readonly InputAction m_Movement_Movement;
    private readonly InputAction m_Movement_Mouse;
    private readonly InputAction m_Movement_Jump;
    private readonly InputAction m_Movement_Sprint;
    private readonly InputAction m_Movement_Crouch;
    private readonly InputAction m_Movement_PrimaryFire;
    private readonly InputAction m_Movement_SecondaryFire;
    private readonly InputAction m_Movement_Reload;
    private readonly InputAction m_Movement_MouseWheel;
    private readonly InputAction m_Movement_WeaponSwitchKeyBoard;
    public struct MovementActions
    {
        private @Controls m_Wrapper;
        public MovementActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Movement_Movement;
        public InputAction @Mouse => m_Wrapper.m_Movement_Mouse;
        public InputAction @Jump => m_Wrapper.m_Movement_Jump;
        public InputAction @Sprint => m_Wrapper.m_Movement_Sprint;
        public InputAction @Crouch => m_Wrapper.m_Movement_Crouch;
        public InputAction @PrimaryFire => m_Wrapper.m_Movement_PrimaryFire;
        public InputAction @SecondaryFire => m_Wrapper.m_Movement_SecondaryFire;
        public InputAction @Reload => m_Wrapper.m_Movement_Reload;
        public InputAction @MouseWheel => m_Wrapper.m_Movement_MouseWheel;
        public InputAction @WeaponSwitchKeyBoard => m_Wrapper.m_Movement_WeaponSwitchKeyBoard;
        public InputActionMap Get() { return m_Wrapper.m_Movement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovementActions set) { return set.Get(); }
        public void SetCallbacks(IMovementActions instance)
        {
            if (m_Wrapper.m_MovementActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnMovement;
                @Mouse.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnMouse;
                @Mouse.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnMouse;
                @Mouse.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnMouse;
                @Jump.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnJump;
                @Sprint.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnSprint;
                @Crouch.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnCrouch;
                @PrimaryFire.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnPrimaryFire;
                @PrimaryFire.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnPrimaryFire;
                @PrimaryFire.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnPrimaryFire;
                @SecondaryFire.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnSecondaryFire;
                @SecondaryFire.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnSecondaryFire;
                @SecondaryFire.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnSecondaryFire;
                @Reload.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnReload;
                @MouseWheel.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnMouseWheel;
                @MouseWheel.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnMouseWheel;
                @MouseWheel.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnMouseWheel;
                @WeaponSwitchKeyBoard.started -= m_Wrapper.m_MovementActionsCallbackInterface.OnWeaponSwitchKeyBoard;
                @WeaponSwitchKeyBoard.performed -= m_Wrapper.m_MovementActionsCallbackInterface.OnWeaponSwitchKeyBoard;
                @WeaponSwitchKeyBoard.canceled -= m_Wrapper.m_MovementActionsCallbackInterface.OnWeaponSwitchKeyBoard;
            }
            m_Wrapper.m_MovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Mouse.started += instance.OnMouse;
                @Mouse.performed += instance.OnMouse;
                @Mouse.canceled += instance.OnMouse;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @PrimaryFire.started += instance.OnPrimaryFire;
                @PrimaryFire.performed += instance.OnPrimaryFire;
                @PrimaryFire.canceled += instance.OnPrimaryFire;
                @SecondaryFire.started += instance.OnSecondaryFire;
                @SecondaryFire.performed += instance.OnSecondaryFire;
                @SecondaryFire.canceled += instance.OnSecondaryFire;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @MouseWheel.started += instance.OnMouseWheel;
                @MouseWheel.performed += instance.OnMouseWheel;
                @MouseWheel.canceled += instance.OnMouseWheel;
                @WeaponSwitchKeyBoard.started += instance.OnWeaponSwitchKeyBoard;
                @WeaponSwitchKeyBoard.performed += instance.OnWeaponSwitchKeyBoard;
                @WeaponSwitchKeyBoard.canceled += instance.OnWeaponSwitchKeyBoard;
            }
        }
    }
    public MovementActions @Movement => new MovementActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Move;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Cancel;
    private readonly InputAction m_UI_Mouse;
    private readonly InputAction m_UI_LeftClick;
    private readonly InputAction m_UI_RightClick;
    private readonly InputAction m_UI_MouseWheel;
    public struct UIActions
    {
        private @Controls m_Wrapper;
        public UIActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_UI_Move;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
        public InputAction @Mouse => m_Wrapper.m_UI_Mouse;
        public InputAction @LeftClick => m_Wrapper.m_UI_LeftClick;
        public InputAction @RightClick => m_Wrapper.m_UI_RightClick;
        public InputAction @MouseWheel => m_Wrapper.m_UI_MouseWheel;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMove;
                @Submit.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Mouse.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMouse;
                @Mouse.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMouse;
                @Mouse.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMouse;
                @LeftClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnLeftClick;
                @LeftClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnLeftClick;
                @LeftClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnLeftClick;
                @RightClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @MouseWheel.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMouseWheel;
                @MouseWheel.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMouseWheel;
                @MouseWheel.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMouseWheel;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Mouse.started += instance.OnMouse;
                @Mouse.performed += instance.OnMouse;
                @Mouse.canceled += instance.OnMouse;
                @LeftClick.started += instance.OnLeftClick;
                @LeftClick.performed += instance.OnLeftClick;
                @LeftClick.canceled += instance.OnLeftClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @MouseWheel.started += instance.OnMouseWheel;
                @MouseWheel.performed += instance.OnMouseWheel;
                @MouseWheel.canceled += instance.OnMouseWheel;
            }
        }
    }
    public UIActions @UI => new UIActions(this);

    // Other
    private readonly InputActionMap m_Other;
    private IOtherActions m_OtherActionsCallbackInterface;
    private readonly InputAction m_Other_Generator;
    private readonly InputAction m_Other_Interact;
    private readonly InputAction m_Other_CreateHookNode;
    private readonly InputAction m_Other_AddForceToHookedObjects;
    private readonly InputAction m_Other_ResetHookNodes;
    private readonly InputAction m_Other_RotateCube;
    private readonly InputAction m_Other_ToggleIngameMenu;
    public struct OtherActions
    {
        private @Controls m_Wrapper;
        public OtherActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Generator => m_Wrapper.m_Other_Generator;
        public InputAction @Interact => m_Wrapper.m_Other_Interact;
        public InputAction @CreateHookNode => m_Wrapper.m_Other_CreateHookNode;
        public InputAction @AddForceToHookedObjects => m_Wrapper.m_Other_AddForceToHookedObjects;
        public InputAction @ResetHookNodes => m_Wrapper.m_Other_ResetHookNodes;
        public InputAction @RotateCube => m_Wrapper.m_Other_RotateCube;
        public InputAction @ToggleIngameMenu => m_Wrapper.m_Other_ToggleIngameMenu;
        public InputActionMap Get() { return m_Wrapper.m_Other; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(OtherActions set) { return set.Get(); }
        public void SetCallbacks(IOtherActions instance)
        {
            if (m_Wrapper.m_OtherActionsCallbackInterface != null)
            {
                @Generator.started -= m_Wrapper.m_OtherActionsCallbackInterface.OnGenerator;
                @Generator.performed -= m_Wrapper.m_OtherActionsCallbackInterface.OnGenerator;
                @Generator.canceled -= m_Wrapper.m_OtherActionsCallbackInterface.OnGenerator;
                @Interact.started -= m_Wrapper.m_OtherActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_OtherActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_OtherActionsCallbackInterface.OnInteract;
                @CreateHookNode.started -= m_Wrapper.m_OtherActionsCallbackInterface.OnCreateHookNode;
                @CreateHookNode.performed -= m_Wrapper.m_OtherActionsCallbackInterface.OnCreateHookNode;
                @CreateHookNode.canceled -= m_Wrapper.m_OtherActionsCallbackInterface.OnCreateHookNode;
                @AddForceToHookedObjects.started -= m_Wrapper.m_OtherActionsCallbackInterface.OnAddForceToHookedObjects;
                @AddForceToHookedObjects.performed -= m_Wrapper.m_OtherActionsCallbackInterface.OnAddForceToHookedObjects;
                @AddForceToHookedObjects.canceled -= m_Wrapper.m_OtherActionsCallbackInterface.OnAddForceToHookedObjects;
                @ResetHookNodes.started -= m_Wrapper.m_OtherActionsCallbackInterface.OnResetHookNodes;
                @ResetHookNodes.performed -= m_Wrapper.m_OtherActionsCallbackInterface.OnResetHookNodes;
                @ResetHookNodes.canceled -= m_Wrapper.m_OtherActionsCallbackInterface.OnResetHookNodes;
                @RotateCube.started -= m_Wrapper.m_OtherActionsCallbackInterface.OnRotateCube;
                @RotateCube.performed -= m_Wrapper.m_OtherActionsCallbackInterface.OnRotateCube;
                @RotateCube.canceled -= m_Wrapper.m_OtherActionsCallbackInterface.OnRotateCube;
                @ToggleIngameMenu.started -= m_Wrapper.m_OtherActionsCallbackInterface.OnToggleIngameMenu;
                @ToggleIngameMenu.performed -= m_Wrapper.m_OtherActionsCallbackInterface.OnToggleIngameMenu;
                @ToggleIngameMenu.canceled -= m_Wrapper.m_OtherActionsCallbackInterface.OnToggleIngameMenu;
            }
            m_Wrapper.m_OtherActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Generator.started += instance.OnGenerator;
                @Generator.performed += instance.OnGenerator;
                @Generator.canceled += instance.OnGenerator;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @CreateHookNode.started += instance.OnCreateHookNode;
                @CreateHookNode.performed += instance.OnCreateHookNode;
                @CreateHookNode.canceled += instance.OnCreateHookNode;
                @AddForceToHookedObjects.started += instance.OnAddForceToHookedObjects;
                @AddForceToHookedObjects.performed += instance.OnAddForceToHookedObjects;
                @AddForceToHookedObjects.canceled += instance.OnAddForceToHookedObjects;
                @ResetHookNodes.started += instance.OnResetHookNodes;
                @ResetHookNodes.performed += instance.OnResetHookNodes;
                @ResetHookNodes.canceled += instance.OnResetHookNodes;
                @RotateCube.started += instance.OnRotateCube;
                @RotateCube.performed += instance.OnRotateCube;
                @RotateCube.canceled += instance.OnRotateCube;
                @ToggleIngameMenu.started += instance.OnToggleIngameMenu;
                @ToggleIngameMenu.performed += instance.OnToggleIngameMenu;
                @ToggleIngameMenu.canceled += instance.OnToggleIngameMenu;
            }
        }
    }
    public OtherActions @Other => new OtherActions(this);
    private int m_PlayerSchemeIndex = -1;
    public InputControlScheme PlayerScheme
    {
        get
        {
            if (m_PlayerSchemeIndex == -1) m_PlayerSchemeIndex = asset.FindControlSchemeIndex("Player");
            return asset.controlSchemes[m_PlayerSchemeIndex];
        }
    }
    public interface IMovementActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnPrimaryFire(InputAction.CallbackContext context);
        void OnSecondaryFire(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnMouseWheel(InputAction.CallbackContext context);
        void OnWeaponSwitchKeyBoard(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnLeftClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnMouseWheel(InputAction.CallbackContext context);
    }
    public interface IOtherActions
    {
        void OnGenerator(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnCreateHookNode(InputAction.CallbackContext context);
        void OnAddForceToHookedObjects(InputAction.CallbackContext context);
        void OnResetHookNodes(InputAction.CallbackContext context);
        void OnRotateCube(InputAction.CallbackContext context);
        void OnToggleIngameMenu(InputAction.CallbackContext context);
    }
}
